{
  "version": 3,
  "sources": [
    "../../../lib_pcg/pcg128.py",
    "../../../lib_pcg/pcg32.py",
    "../../lib_pcg128_exposer/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEOA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AACK;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;;;AAAA;;;AAAA;;;AACK;;;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;AADL;;AAAA;AAAA;;AAAA;;;;;;AAAA;;;;;;;;;AAiBK;;AAAA;AAAL;;;AAAA;;AAhBA;;;;;;;;;AFsBW;;AAAA;AAAe;;AAAf;AAAP;AAGiB;;AAAwB;AAAxB;ACyHI;AAkHe;AAAf;AAAA;;AACA;AD5OwB;;AC4OxB;AAAA;;AAlHD;;AAAA;AAAA;;AAiHgB;AAAf;AAAA;;AD3OwB;;AC4OxB;AAAA;;AAAA;AD3OJ;;AAAwB;;AAAxB;AC2OI;;AD3OwB;;AC2OxB;AAAA;;AAlHD;AAAA;;AAiHgB;AAAf;AAAA;;AD1OwB;;AC2OxB;AAAA;;AAAA;AD1OJ;;AAAwB;;AAAxB;AC0OI;;AD1OyB;;AC0OzB;AAAA;;AAlHD;AAAA;;AAiHgB;AAAf;AAAA;;ADzOyB;;AC0OzB;AAAA;;AAAA;ADzOJ;;AAAwB;;AAAxB;ACyOI;ADzOyB;;ACyOzB;AAAA;;AAlHD;AAAA;;AAiHgB;AAAf;AAAA;;ADxOyB;;ACyOzB;AAAA;;AC1PkC;;AAAA;AF8C9C;;;;AAEN;;AAAe;AAAf;AAAA;;;AAAqB;;AAAe;AAAf;AAArB;;;AACU;AAAL;;;;;;;;;;;;;;;;;;AAAK;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEX;;AAAA;;;AAAc;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAd;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAHK;;AAAA;AAAA;AAAA;;;;;AE9CT;;AAAA;;AAAA;AFmDG;;AAAe;AAAf;AAAX;;;AACmB;;AAAc;AAAd;AAAP;AACO;;AAAc;AAAd;AAAP;AACqB;;AAAc;AAAd;AAAd;;AAAA;AAAP;AAEA;;AAAA;;AAAiB;AAAjB;;AAiFA;;AAAA;AAAmB;AAAgB;AAAnC;AAAwC;;;;;;;;;;;;;;;;;;AAAzC;AA3EH;AAAY;AAAZ;;AAES;AAAL;;;;;;;;;;;;;;;;;;AAAK;;AAAA;;AAAA;AAAjB;;;AAEmC;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAChB;;AAAA;AAAnB;;;AACoB;;AAAA;;;AACkB;;AAAA;;AAAA;AAAD;;AAAA;AAAb;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAJH;;AAAA;AAAA;AAAA;;;;;AANE;;AAAc;;;;;;;;;;;;;;;;;;AAAd;AAAP;AAEiB;AAAjB;;AAAiB;AAAjB;;;;;AAgBZ;;;AC0KyB;;AAAe;AAAf;AAAA;;AD3Je;;AC4Jf;AAAA;;ADzJ0B;AAAA;AAAjC;;AAAA;AAAA;ACwJO;;AAAe;AAAf;AAAA;;AACA;AAAA;;ADrJyB;AAAA;AAAhC;;AAAA;AAAA;ACoJO;;AAAe;AAAf;AAAA;;AACA;AAAA;;ADjJ0B;AAAA;AAAjC;;AAAA;AAAA;ACgJO;;AAAe;AAAf;AAAA;;AACA;AAAA;;AASE;;AAAS;;AAAT;AAAD;;AAAA;AAA0B;;AAA3B;AAqBL;AAAT;AArB8C;;AAAS;;AAAT;AAO7C;AAAA;AAMuB;AAAA;AAAQ;AAAhB;AAAA;;AANiD;;AAArB;AAAV;;AAAA;AAAA;AAczB;AAAT;AAdA;AD3JqC;;AAA5B;ACoJO;;AAAS;;AAAT;AAAD;;AAAA;AAA0B;;AAA3B;AAqBL;AAAT;AArB8C;;AAAS;;AAAT;AAO7C;AAAA;AAMuB;AAAA;AAAQ;AAAhB;AAAA;;AANiD;;AAArB;AAAV;;AAAA;AAAA;AAczB;AAAT;AAdA;AD3JS;AAAR;ACoJe;;AAAS;;AAAT;AAAD;;AAAA;AAA0B;;AAA3B;AAqBL;AAAT;AArB8C;;AAAS;;AAAT;AAO7C;AAAA;AAMuB;AAAA;AAAQ;AAAhB;AAAA;;AANiD;;AAArB;AAAV;;AAAA;AAAA;AAczB;AAAT;AAdA;AD1JuC;;AAA5B;ACmJK;;AAAS;;AAAT;AAAD;;AAAA;AAA0B;;AAA3B;AAqBL;AAAT;AArB8C;;AAAS;;AAAT;AAO7C;AAAA;AAMuB;AAAA;AAAQ;AAAhB;AAAA;;AANiD;;AAArB;AAAV;;AAAA;AAAA;AAczB;AAAT;AAdA;AD1JW;AAAR;AADF;AAHR;AEvGJ;;;AAEe;;AAAc;;AAAd;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 6364136223846793005 4294967295 0 1442695040888963407 1442695040888963409 1442695040888963411 1442695040888963413"
    },
    "55": {
      "op": "bytecblock 0x 0x01 0x0100000000000000000000000000000000"
    },
    "78": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "80": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "83": {
      "op": "pushbytes 0xc35e095d // method \"bounded_rand_uint128(byte[32],uint128,uint128,uint16)uint128[]\""
    },
    "89": {
      "op": "txna ApplicationArgs 0"
    },
    "92": {
      "op": "match main_bounded_rand_uint128_route@3"
    },
    "96": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "intc_3 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "97": {
      "op": "return"
    },
    "98": {
      "block": "main_bounded_rand_uint128_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "100": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "101": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "102": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "104": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "105": {
      "op": "txna ApplicationArgs 1"
    },
    "108": {
      "op": "txna ApplicationArgs 2"
    },
    "111": {
      "op": "txna ApplicationArgs 3"
    },
    "114": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "117": {
      "callsub": "smart_contracts.lib_pcg128_exposer.contract.LibPcg128ExposerAlgopy.bounded_rand_uint128",
      "op": "callsub bounded_rand_uint128",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "120": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "126": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%11#0"
      ]
    },
    "127": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "128": {
      "op": "log",
      "stack_out": []
    },
    "129": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "130": {
      "op": "return"
    },
    "131": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "pushint 4 // 4"
    },
    "133": {
      "op": "intc_3 // 0"
    },
    "134": {
      "op": "txn OnCompletion",
      "defined_out": [
        "0",
        "4",
        "tmp%13#0"
      ],
      "stack_out": [
        "4",
        "0",
        "tmp%13#0"
      ]
    },
    "136": {
      "op": "match main_update@7 main___algopy_default_create@8",
      "stack_out": []
    },
    "142": {
      "op": "b main_after_if_else@11"
    },
    "145": {
      "block": "main___algopy_default_create@8",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "147": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "148": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "149": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "150": {
      "op": "return"
    },
    "151": {
      "block": "main_update@7",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "153": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "154": {
      "callsub": "smart_contracts.lib_pcg128_exposer.contract.LibPcg128ExposerAlgopy.update",
      "op": "callsub update"
    },
    "157": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "158": {
      "op": "return"
    },
    "159": {
      "subroutine": "smart_contracts.lib_pcg128_exposer.contract.LibPcg128ExposerAlgopy.bounded_rand_uint128",
      "params": {
        "seed#0": "bytes",
        "lower_bound#0": "bytes",
        "upper_bound#0": "bytes",
        "length#0": "bytes"
      },
      "block": "bounded_rand_uint128",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "162": {
      "op": "intc_3 // 0",
      "stack_out": [
        "absolute_bound#0"
      ]
    },
    "163": {
      "op": "dupn 2",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0"
      ]
    },
    "165": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0"
      ]
    },
    "166": {
      "op": "dupn 4",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3"
      ]
    },
    "168": {
      "op": "frame_dig -4",
      "defined_out": [
        "seed#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "seed#0 (copy)"
      ]
    },
    "170": {
      "op": "len",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "tmp%0#1"
      ]
    },
    "171": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "tmp%0#1"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "tmp%0#1",
        "32"
      ]
    },
    "173": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "tmp%1#0"
      ]
    },
    "174": {
      "op": "assert",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3"
      ]
    },
    "175": {
      "op": "frame_dig -4",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "seed#0 (copy)"
      ]
    },
    "177": {
      "op": "intc_3 // 0",
      "defined_out": [
        "0",
        "seed#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "seed#0 (copy)",
        "0"
      ]
    },
    "178": {
      "op": "extract_uint64",
      "defined_out": [
        "initial_state#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "initial_state#0"
      ]
    },
    "179": {
      "op": "intc_3 // 0",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "initial_state#0",
        "0"
      ]
    },
    "180": {
      "op": "intc_1 // 6364136223846793005",
      "defined_out": [
        "0",
        "6364136223846793005",
        "initial_state#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "initial_state#0",
        "0",
        "6364136223846793005"
      ]
    },
    "181": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "initial_state#0",
        "low_mul#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "initial_state#0",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "182": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "initial_state#0",
        "low_mul#0"
      ]
    },
    "184": {
      "op": "dup",
      "defined_out": [
        "initial_state#0",
        "low_mul#0",
        "low_mul#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "initial_state#0",
        "low_mul#0",
        "low_mul#0 (copy)"
      ]
    },
    "185": {
      "op": "intc 4 // 1442695040888963407",
      "defined_out": [
        "1442695040888963407",
        "initial_state#0",
        "low_mul#0",
        "low_mul#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "initial_state#0",
        "low_mul#0",
        "low_mul#0 (copy)",
        "1442695040888963407"
      ]
    },
    "187": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "initial_state#0",
        "low_add#0",
        "low_mul#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "initial_state#0",
        "low_mul#0",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "188": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "initial_state#0",
        "low_mul#0",
        "low_add#0"
      ]
    },
    "190": {
      "op": "uncover 2",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_mul#0",
        "low_add#0",
        "initial_state#0"
      ]
    },
    "192": {
      "op": "addw",
      "defined_out": [
        "_high_addw#0",
        "low_mul#0",
        "state#1"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_mul#0",
        "_high_addw#0",
        "state#1"
      ]
    },
    "193": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_mul#0",
        "state#1"
      ]
    },
    "195": {
      "op": "intc_1 // 6364136223846793005",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_mul#0",
        "state#1",
        "6364136223846793005"
      ]
    },
    "196": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "low_mul#0",
        "low_mul#1"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_mul#0",
        "_high_mul#0",
        "low_mul#1"
      ]
    },
    "197": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_mul#0",
        "low_mul#1"
      ]
    },
    "199": {
      "op": "intc 4 // 1442695040888963407",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_mul#0",
        "low_mul#1",
        "1442695040888963407"
      ]
    },
    "201": {
      "op": "addw",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_mul#0",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "202": {
      "op": "cover 2",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "low_mul#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "_high_add#0"
      ]
    },
    "204": {
      "op": "pop",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0"
      ]
    },
    "205": {
      "op": "frame_dig -4",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "seed#0 (copy)"
      ]
    },
    "207": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "low_add#0",
        "low_mul#0",
        "seed#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "seed#0 (copy)",
        "8"
      ]
    },
    "209": {
      "op": "extract_uint64",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "initial_state#0"
      ]
    },
    "210": {
      "op": "dig 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "initial_state#0",
        "low_mul#0 (copy)"
      ]
    },
    "212": {
      "op": "intc 5 // 1442695040888963409",
      "defined_out": [
        "1442695040888963409",
        "initial_state#0",
        "low_add#0",
        "low_mul#0",
        "low_mul#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "initial_state#0",
        "low_mul#0 (copy)",
        "1442695040888963409"
      ]
    },
    "214": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "initial_state#0",
        "low_add#0",
        "low_add#2",
        "low_mul#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "initial_state#0",
        "_high_add#0",
        "low_add#2"
      ]
    },
    "215": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "initial_state#0",
        "low_add#2"
      ]
    },
    "217": {
      "op": "addw",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "_high_addw#0",
        "state#1"
      ]
    },
    "218": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "state#1"
      ]
    },
    "220": {
      "op": "intc_1 // 6364136223846793005",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "state#1",
        "6364136223846793005"
      ]
    },
    "221": {
      "op": "mulw",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "_high_mul#0",
        "low_mul#1"
      ]
    },
    "222": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "low_mul#1"
      ]
    },
    "224": {
      "op": "intc 5 // 1442695040888963409",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "low_mul#1",
        "1442695040888963409"
      ]
    },
    "226": {
      "op": "addw",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_mul#0",
        "_high_add#0",
        "low_add#2"
      ]
    },
    "227": {
      "op": "cover 2",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "low_add#2",
        "low_mul#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "_high_add#0"
      ]
    },
    "229": {
      "op": "pop",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0"
      ]
    },
    "230": {
      "op": "frame_dig -4",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "seed#0 (copy)"
      ]
    },
    "232": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "seed#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "seed#0 (copy)",
        "16"
      ]
    },
    "234": {
      "op": "extract_uint64",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "initial_state#0"
      ]
    },
    "235": {
      "op": "dig 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "initial_state#0",
        "low_mul#0 (copy)"
      ]
    },
    "237": {
      "op": "intc 6 // 1442695040888963411",
      "defined_out": [
        "1442695040888963411",
        "initial_state#0",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "low_mul#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "initial_state#0",
        "low_mul#0 (copy)",
        "1442695040888963411"
      ]
    },
    "239": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "initial_state#0",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "initial_state#0",
        "_high_add#0",
        "low_add#4"
      ]
    },
    "240": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "initial_state#0",
        "low_add#4"
      ]
    },
    "242": {
      "op": "addw",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "_high_addw#0",
        "state#1"
      ]
    },
    "243": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "state#1"
      ]
    },
    "245": {
      "op": "intc_1 // 6364136223846793005",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "state#1",
        "6364136223846793005"
      ]
    },
    "246": {
      "op": "mulw",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "_high_mul#0",
        "low_mul#1"
      ]
    },
    "247": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "low_mul#1"
      ]
    },
    "249": {
      "op": "intc 6 // 1442695040888963411",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "low_mul#1",
        "1442695040888963411"
      ]
    },
    "251": {
      "op": "addw",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_mul#0",
        "_high_add#0",
        "low_add#4"
      ]
    },
    "252": {
      "op": "cover 2",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0",
        "_high_add#0"
      ]
    },
    "254": {
      "op": "pop",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0"
      ]
    },
    "255": {
      "op": "frame_dig -4",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0",
        "seed#0 (copy)"
      ]
    },
    "257": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0",
        "seed#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0",
        "seed#0 (copy)",
        "24"
      ]
    },
    "259": {
      "op": "extract_uint64",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0",
        "initial_state#0"
      ]
    },
    "260": {
      "op": "swap",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "initial_state#0",
        "low_mul#0"
      ]
    },
    "261": {
      "op": "intc 7 // 1442695040888963413",
      "defined_out": [
        "1442695040888963413",
        "initial_state#0",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "initial_state#0",
        "low_mul#0",
        "1442695040888963413"
      ]
    },
    "263": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "initial_state#0",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "initial_state#0",
        "_high_add#0",
        "low_add#6"
      ]
    },
    "264": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "initial_state#0",
        "low_add#6"
      ]
    },
    "266": {
      "op": "addw",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "_high_addw#0",
        "state#1"
      ]
    },
    "267": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "state#1"
      ]
    },
    "269": {
      "op": "intc_1 // 6364136223846793005",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "state#1",
        "6364136223846793005"
      ]
    },
    "270": {
      "op": "mulw",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "271": {
      "op": "bury 1",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0"
      ]
    },
    "273": {
      "op": "intc 7 // 1442695040888963413",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_mul#0",
        "1442695040888963413"
      ]
    },
    "275": {
      "op": "addw",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "_high_add#0",
        "low_add#6"
      ]
    },
    "276": {
      "op": "bury 1",
      "defined_out": [
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6"
      ]
    },
    "278": {
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#0 (copy)"
      ]
    },
    "280": {
      "op": "btoi",
      "defined_out": [
        "length#1",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1"
      ]
    },
    "281": {
      "op": "pushbytes 0x0000"
    },
    "285": {
      "op": "frame_dig -3"
    },
    "287": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "length#1",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "lower_bound#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "lower_bound#0 (copy)",
        "0x"
      ]
    },
    "288": {
      "op": "b==",
      "defined_out": [
        "length#1",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "result#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "tmp%0#2"
      ]
    },
    "289": {
      "op": "bz bounded_rand_uint128_else_body@10",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "292": {
      "op": "frame_dig -2"
    },
    "294": {
      "op": "bytec_0 // 0x"
    },
    "295": {
      "op": "b=="
    },
    "296": {
      "op": "bz bounded_rand_uint128_else_body@10"
    },
    "299": {
      "op": "intc_3 // 0"
    },
    "300": {
      "op": "frame_bury 3"
    },
    "302": {
      "op": "frame_dig 11"
    },
    "304": {
      "op": "frame_bury 7"
    },
    "306": {
      "op": "frame_dig 10"
    },
    "308": {
      "op": "frame_bury 6"
    },
    "310": {
      "op": "frame_dig 9"
    },
    "312": {
      "op": "frame_bury 5"
    },
    "314": {
      "op": "frame_dig 8"
    },
    "316": {
      "op": "frame_bury 4"
    },
    "318": {
      "block": "bounded_rand_uint128_for_header@6",
      "stack_in": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "i#0"
      ]
    },
    "320": {
      "op": "frame_dig 12",
      "defined_out": [
        "i#0",
        "length#1"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "i#0",
        "length#1"
      ]
    },
    "322": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "length#1"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "continue_looping%0#0"
      ]
    },
    "323": {
      "op": "bz bounded_rand_uint128_after_if_else@23",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "326": {
      "op": "frame_dig 4"
    },
    "328": {
      "op": "frame_dig 5"
    },
    "330": {
      "op": "frame_dig 6"
    },
    "332": {
      "op": "frame_dig 7"
    },
    "334": {
      "callsub": "lib_pcg.pcg128.__pcg128_unbounded_random",
      "op": "callsub __pcg128_unbounded_random"
    },
    "337": {
      "op": "cover 4"
    },
    "339": {
      "op": "frame_bury 7"
    },
    "341": {
      "op": "frame_bury 6"
    },
    "343": {
      "op": "frame_bury 5"
    },
    "345": {
      "op": "frame_bury 4"
    },
    "347": {
      "op": "frame_dig 13"
    },
    "349": {
      "op": "extract 2 0"
    },
    "352": {
      "op": "dig 1"
    },
    "354": {
      "op": "len"
    },
    "355": {
      "op": "pushint 16 // 16"
    },
    "357": {
      "op": "<="
    },
    "358": {
      "error": "overflow",
      "op": "assert // overflow"
    },
    "359": {
      "op": "pushint 16 // 16"
    },
    "361": {
      "op": "bzero"
    },
    "362": {
      "op": "uncover 2"
    },
    "364": {
      "op": "b|"
    },
    "365": {
      "op": "concat"
    },
    "366": {
      "op": "dup"
    },
    "367": {
      "op": "len"
    },
    "368": {
      "op": "pushint 16 // 16"
    },
    "370": {
      "op": "/"
    },
    "371": {
      "op": "itob"
    },
    "372": {
      "op": "extract 6 2"
    },
    "375": {
      "op": "swap"
    },
    "376": {
      "op": "concat"
    },
    "377": {
      "op": "frame_bury 13"
    },
    "379": {
      "op": "frame_dig 3"
    },
    "381": {
      "op": "intc_0 // 1"
    },
    "382": {
      "op": "+"
    },
    "383": {
      "op": "frame_bury 3"
    },
    "385": {
      "op": "b bounded_rand_uint128_for_header@6"
    },
    "388": {
      "block": "bounded_rand_uint128_after_if_else@23",
      "stack_in": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ],
      "op": "frame_dig 13",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "result#0"
      ]
    },
    "390": {
      "op": "frame_bury 0"
    },
    "392": {
      "retsub": true,
      "op": "retsub"
    },
    "393": {
      "block": "bounded_rand_uint128_else_body@10",
      "stack_in": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "upper_bound#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "upper_bound#0 (copy)"
      ]
    },
    "395": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "upper_bound#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "upper_bound#0 (copy)",
        "0x"
      ]
    },
    "396": {
      "op": "b!=",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "tmp%3#1"
      ]
    },
    "397": {
      "op": "bz bounded_rand_uint128_else_body@12",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "400": {
      "op": "frame_dig -2"
    },
    "402": {
      "op": "bytec_1 // 0x01"
    },
    "403": {
      "op": "b>"
    },
    "404": {
      "op": "assert"
    },
    "405": {
      "op": "frame_dig -2"
    },
    "407": {
      "op": "bytec_2 // 0x0100000000000000000000000000000000"
    },
    "408": {
      "op": "b<"
    },
    "409": {
      "op": "assert"
    },
    "410": {
      "op": "frame_dig -2"
    },
    "412": {
      "op": "bytec_1 // 0x01"
    },
    "413": {
      "op": "b-"
    },
    "414": {
      "op": "frame_dig -3"
    },
    "416": {
      "op": "b>"
    },
    "417": {
      "op": "assert"
    },
    "418": {
      "op": "frame_dig -2"
    },
    "420": {
      "op": "frame_dig -3"
    },
    "422": {
      "op": "b-"
    },
    "423": {
      "op": "frame_bury 0"
    },
    "425": {
      "block": "bounded_rand_uint128_after_if_else@13",
      "stack_in": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "absolute_bound#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "absolute_bound#0"
      ]
    },
    "427": {
      "op": "dup",
      "defined_out": [
        "absolute_bound#0",
        "absolute_bound#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "absolute_bound#0",
        "absolute_bound#0 (copy)"
      ]
    },
    "428": {
      "op": "b~",
      "defined_out": [
        "absolute_bound#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "absolute_bound#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "429": {
      "op": "bytec_1 // 0x01",
      "defined_out": [
        "0x01",
        "absolute_bound#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "absolute_bound#0",
        "reinterpret_biguint%0#0",
        "0x01"
      ]
    },
    "430": {
      "op": "b+",
      "defined_out": [
        "absolute_bound#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "absolute_bound#0",
        "tmp%0#3"
      ]
    },
    "431": {
      "op": "pushbytes 0xffffffffffffffffffffffffffffffff",
      "defined_out": [
        "0xffffffffffffffffffffffffffffffff",
        "absolute_bound#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "absolute_bound#0",
        "tmp%0#3",
        "0xffffffffffffffffffffffffffffffff"
      ]
    },
    "449": {
      "op": "b&",
      "defined_out": [
        "absolute_bound#0",
        "tmp%1#2"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "absolute_bound#0",
        "tmp%1#2"
      ]
    },
    "450": {
      "op": "swap",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "tmp%1#2",
        "absolute_bound#0"
      ]
    },
    "451": {
      "op": "b%",
      "defined_out": [
        "absolute_bound#0",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "threshold#0"
      ]
    },
    "452": {
      "op": "frame_bury 2",
      "defined_out": [
        "absolute_bound#0",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "454": {
      "op": "intc_3 // 0",
      "defined_out": [
        "absolute_bound#0",
        "i#0",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "i#0"
      ]
    },
    "455": {
      "op": "frame_bury 3",
      "defined_out": [
        "absolute_bound#0",
        "i#0",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "457": {
      "op": "frame_dig 11",
      "defined_out": [
        "absolute_bound#0",
        "i#0",
        "state.3#3",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "state.3#3"
      ]
    },
    "459": {
      "op": "frame_bury 7",
      "defined_out": [
        "absolute_bound#0",
        "i#0",
        "state.3#3",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "461": {
      "op": "frame_dig 10",
      "defined_out": [
        "absolute_bound#0",
        "i#0",
        "state.2#3",
        "state.3#3",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "state.2#3"
      ]
    },
    "463": {
      "op": "frame_bury 6",
      "defined_out": [
        "absolute_bound#0",
        "i#0",
        "state.2#3",
        "state.3#3",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "465": {
      "op": "frame_dig 9",
      "defined_out": [
        "absolute_bound#0",
        "i#0",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "state.1#3"
      ]
    },
    "467": {
      "op": "frame_bury 5",
      "defined_out": [
        "absolute_bound#0",
        "i#0",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "469": {
      "op": "frame_dig 8",
      "defined_out": [
        "absolute_bound#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "state.0#3"
      ]
    },
    "471": {
      "op": "frame_bury 4",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "473": {
      "block": "bounded_rand_uint128_for_header@14",
      "stack_in": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "i#0"
      ]
    },
    "475": {
      "op": "frame_dig 12",
      "defined_out": [
        "i#0",
        "length#1"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "i#0",
        "length#1"
      ]
    },
    "477": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0",
        "length#1"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "continue_looping%1#0"
      ]
    },
    "478": {
      "op": "bz bounded_rand_uint128_after_if_else@23",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "481": {
      "block": "bounded_rand_uint128_while_top@16",
      "stack_in": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "state.0#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "state.0#3"
      ]
    },
    "483": {
      "op": "frame_dig 5",
      "defined_out": [
        "state.0#3",
        "state.1#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "state.0#3",
        "state.1#3"
      ]
    },
    "485": {
      "op": "frame_dig 6",
      "defined_out": [
        "state.0#3",
        "state.1#3",
        "state.2#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "state.0#3",
        "state.1#3",
        "state.2#3"
      ]
    },
    "487": {
      "op": "frame_dig 7",
      "defined_out": [
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3"
      ]
    },
    "489": {
      "callsub": "lib_pcg.pcg128.__pcg128_unbounded_random",
      "op": "callsub __pcg128_unbounded_random",
      "defined_out": [
        "candidate#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "candidate#0"
      ]
    },
    "492": {
      "op": "dup",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "candidate#0",
        "candidate#0 (copy)"
      ]
    },
    "493": {
      "op": "cover 5",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "candidate#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "candidate#0"
      ]
    },
    "495": {
      "op": "frame_bury 1",
      "defined_out": [
        "candidate#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "candidate#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3"
      ]
    },
    "497": {
      "op": "frame_bury 7",
      "defined_out": [
        "candidate#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "candidate#0",
        "state.0#3",
        "state.1#3",
        "state.2#3"
      ]
    },
    "499": {
      "op": "frame_bury 6",
      "defined_out": [
        "candidate#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "candidate#0",
        "state.0#3",
        "state.1#3"
      ]
    },
    "501": {
      "op": "frame_bury 5",
      "defined_out": [
        "candidate#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "candidate#0",
        "state.0#3"
      ]
    },
    "503": {
      "op": "frame_bury 4",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "candidate#0"
      ]
    },
    "505": {
      "op": "frame_dig 2",
      "defined_out": [
        "candidate#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "threshold#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "candidate#0",
        "threshold#0"
      ]
    },
    "507": {
      "op": "b>=",
      "defined_out": [
        "candidate#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "threshold#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "tmp%10#0"
      ]
    },
    "508": {
      "op": "bz bounded_rand_uint128_while_top@16",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "511": {
      "op": "frame_dig 13"
    },
    "513": {
      "op": "extract 2 0"
    },
    "516": {
      "op": "frame_dig 1"
    },
    "518": {
      "op": "frame_dig 0"
    },
    "520": {
      "op": "b%"
    },
    "521": {
      "op": "frame_dig -3"
    },
    "523": {
      "op": "b+"
    },
    "524": {
      "op": "dup"
    },
    "525": {
      "op": "len"
    },
    "526": {
      "op": "pushint 16 // 16"
    },
    "528": {
      "op": "<="
    },
    "529": {
      "error": "overflow",
      "op": "assert // overflow"
    },
    "530": {
      "op": "pushint 16 // 16"
    },
    "532": {
      "op": "bzero"
    },
    "533": {
      "op": "b|"
    },
    "534": {
      "op": "concat"
    },
    "535": {
      "op": "dup"
    },
    "536": {
      "op": "len"
    },
    "537": {
      "op": "pushint 16 // 16"
    },
    "539": {
      "op": "/"
    },
    "540": {
      "op": "itob"
    },
    "541": {
      "op": "extract 6 2"
    },
    "544": {
      "op": "swap"
    },
    "545": {
      "op": "concat"
    },
    "546": {
      "op": "frame_bury 13"
    },
    "548": {
      "op": "frame_dig 3"
    },
    "550": {
      "op": "intc_0 // 1"
    },
    "551": {
      "op": "+"
    },
    "552": {
      "op": "frame_bury 3"
    },
    "554": {
      "op": "b bounded_rand_uint128_for_header@14"
    },
    "557": {
      "block": "bounded_rand_uint128_else_body@12",
      "stack_in": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "lower_bound#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "lower_bound#0 (copy)"
      ]
    },
    "559": {
      "op": "pushbytes 0x80000000000000000000000000000000",
      "defined_out": [
        "0x80000000000000000000000000000000",
        "lower_bound#0 (copy)"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "lower_bound#0 (copy)",
        "0x80000000000000000000000000000000"
      ]
    },
    "577": {
      "op": "b<",
      "defined_out": [
        "tmp%8#1"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "tmp%8#1"
      ]
    },
    "578": {
      "op": "assert",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "579": {
      "op": "bytec_2 // 0x0100000000000000000000000000000000",
      "defined_out": [
        "0x0100000000000000000000000000000000"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "0x0100000000000000000000000000000000"
      ]
    },
    "580": {
      "op": "frame_dig -3",
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "0x0100000000000000000000000000000000",
        "lower_bound#0 (copy)"
      ]
    },
    "582": {
      "op": "b-",
      "defined_out": [
        "absolute_bound#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0",
        "absolute_bound#0"
      ]
    },
    "583": {
      "op": "frame_bury 0",
      "defined_out": [
        "absolute_bound#0"
      ],
      "stack_out": [
        "absolute_bound#0",
        "candidate#0",
        "threshold#0",
        "i#0",
        "state.0#3",
        "state.1#3",
        "state.2#3",
        "state.3#3",
        "low_add#0",
        "low_add#2",
        "low_add#4",
        "low_add#6",
        "length#1",
        "result#0"
      ]
    },
    "585": {
      "op": "b bounded_rand_uint128_after_if_else@13"
    },
    "588": {
      "subroutine": "lib_pcg.pcg128.__pcg128_unbounded_random",
      "params": {
        "state.0#0": "uint64",
        "state.1#0": "uint64",
        "state.2#0": "uint64",
        "state.3#0": "uint64"
      },
      "block": "__pcg128_unbounded_random",
      "stack_in": [],
      "op": "proto 4 5"
    },
    "591": {
      "op": "frame_dig -4",
      "defined_out": [
        "state.0#0 (copy)"
      ],
      "stack_out": [
        "state.0#0 (copy)"
      ]
    },
    "593": {
      "op": "intc_1 // 6364136223846793005",
      "defined_out": [
        "6364136223846793005",
        "state.0#0 (copy)"
      ],
      "stack_out": [
        "state.0#0 (copy)",
        "6364136223846793005"
      ]
    },
    "594": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "low_mul#0"
      ],
      "stack_out": [
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "595": {
      "op": "bury 1",
      "stack_out": [
        "low_mul#0"
      ]
    },
    "597": {
      "op": "intc 4 // 1442695040888963407",
      "defined_out": [
        "1442695040888963407",
        "low_mul#0"
      ],
      "stack_out": [
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "599": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "low_add#0"
      ],
      "stack_out": [
        "_high_add#0",
        "low_add#0"
      ]
    },
    "600": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0"
      ]
    },
    "602": {
      "op": "dup",
      "defined_out": [
        "low_add#0",
        "low_add#0 (copy)"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#0 (copy)"
      ]
    },
    "603": {
      "op": "!",
      "defined_out": [
        "low_add#0",
        "reinterpret_uint64%0#0"
      ],
      "stack_out": [
        "low_add#0",
        "reinterpret_uint64%0#0"
      ]
    },
    "604": {
      "op": "intc 5 // 1442695040888963409",
      "defined_out": [
        "1442695040888963409",
        "low_add#0",
        "reinterpret_uint64%0#0"
      ],
      "stack_out": [
        "low_add#0",
        "reinterpret_uint64%0#0",
        "1442695040888963409"
      ]
    },
    "606": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "1442695040888963409",
        "reinterpret_uint64%0#0"
      ]
    },
    "607": {
      "op": "shl",
      "defined_out": [
        "incr#1",
        "low_add#0"
      ],
      "stack_out": [
        "low_add#0",
        "incr#1"
      ]
    },
    "608": {
      "op": "frame_dig -3",
      "defined_out": [
        "incr#1",
        "low_add#0",
        "state.1#0 (copy)"
      ],
      "stack_out": [
        "low_add#0",
        "incr#1",
        "state.1#0 (copy)"
      ]
    },
    "610": {
      "op": "intc_1 // 6364136223846793005",
      "stack_out": [
        "low_add#0",
        "incr#1",
        "state.1#0 (copy)",
        "6364136223846793005"
      ]
    },
    "611": {
      "op": "mulw",
      "stack_out": [
        "low_add#0",
        "incr#1",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "612": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0",
        "incr#1",
        "low_mul#0"
      ]
    },
    "614": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "low_add#1"
      ],
      "stack_out": [
        "low_add#0",
        "_high_add#0",
        "low_add#1"
      ]
    },
    "615": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0",
        "low_add#1"
      ]
    },
    "617": {
      "op": "dup",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#1 (copy)"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#1 (copy)"
      ]
    },
    "618": {
      "op": "!",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "reinterpret_uint64%1#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "reinterpret_uint64%1#0"
      ]
    },
    "619": {
      "op": "intc 6 // 1442695040888963411",
      "defined_out": [
        "1442695040888963411",
        "low_add#0",
        "low_add#1",
        "reinterpret_uint64%1#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "reinterpret_uint64%1#0",
        "1442695040888963411"
      ]
    },
    "621": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "1442695040888963411",
        "reinterpret_uint64%1#0"
      ]
    },
    "622": {
      "op": "shl",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "incr#1"
      ]
    },
    "623": {
      "op": "frame_dig -2",
      "defined_out": [
        "incr#1",
        "low_add#0",
        "low_add#1",
        "state.2#0 (copy)"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "incr#1",
        "state.2#0 (copy)"
      ]
    },
    "625": {
      "op": "intc_1 // 6364136223846793005",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "incr#1",
        "state.2#0 (copy)",
        "6364136223846793005"
      ]
    },
    "626": {
      "op": "mulw",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "incr#1",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "627": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "incr#1",
        "low_mul#0"
      ]
    },
    "629": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "low_add#1",
        "low_add#2"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "_high_add#0",
        "low_add#2"
      ]
    },
    "630": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2"
      ]
    },
    "632": {
      "op": "dup",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#2 (copy)"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#2 (copy)"
      ]
    },
    "633": {
      "op": "!",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "reinterpret_uint64%2#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "reinterpret_uint64%2#0"
      ]
    },
    "634": {
      "op": "intc 7 // 1442695040888963413",
      "defined_out": [
        "1442695040888963413",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "reinterpret_uint64%2#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "reinterpret_uint64%2#0",
        "1442695040888963413"
      ]
    },
    "636": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "1442695040888963413",
        "reinterpret_uint64%2#0"
      ]
    },
    "637": {
      "op": "shl",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "incr#1"
      ]
    },
    "638": {
      "op": "frame_dig -1",
      "defined_out": [
        "incr#1",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "state.3#0 (copy)"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "incr#1",
        "state.3#0 (copy)"
      ]
    },
    "640": {
      "op": "intc_1 // 6364136223846793005",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "incr#1",
        "state.3#0 (copy)",
        "6364136223846793005"
      ]
    },
    "641": {
      "op": "mulw",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "incr#1",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "642": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "incr#1",
        "low_mul#0"
      ]
    },
    "644": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "_high_add#0",
        "low_add#3"
      ]
    },
    "645": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3"
      ]
    },
    "647": {
      "op": "frame_dig -4",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "state.0#0 (copy)"
      ]
    },
    "649": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "state.0#0 (copy)"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "state.0#0 (copy)",
        "18"
      ]
    },
    "651": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1"
      ]
    },
    "652": {
      "op": "frame_dig -4",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "state.0#0 (copy)"
      ]
    },
    "654": {
      "op": "^",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%1#1"
      ]
    },
    "655": {
      "op": "pushint 27 // 27",
      "defined_out": [
        "27",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%1#1",
        "27"
      ]
    },
    "657": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0"
      ]
    },
    "658": {
      "op": "intc_2 // 4294967295",
      "defined_out": [
        "4294967295",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "4294967295"
      ]
    },
    "659": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0"
      ]
    },
    "660": {
      "op": "frame_dig -4",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "state.0#0 (copy)"
      ]
    },
    "662": {
      "op": "pushint 59 // 59",
      "defined_out": [
        "59",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "state.0#0 (copy)",
        "value#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "state.0#0 (copy)",
        "59"
      ]
    },
    "664": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "rot#0",
        "value#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "rot#0"
      ]
    },
    "665": {
      "op": "dup2",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "rot#0",
        "rot#0 (copy)",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "rot#0",
        "value#0 (copy)",
        "rot#0 (copy)"
      ]
    },
    "666": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "rot#0",
        "tmp%0#1"
      ]
    },
    "667": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "tmp%0#1",
        "rot#0"
      ]
    },
    "668": {
      "op": "~",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "tmp%0#7",
        "value#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "tmp%0#1",
        "tmp%0#7"
      ]
    },
    "669": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "tmp%0#7",
        "value#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "tmp%0#1",
        "tmp%0#7",
        "1"
      ]
    },
    "670": {
      "op": "addw",
      "defined_out": [
        "_addw_high#0",
        "addw_low#0",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "value#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "tmp%0#1",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "671": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "tmp%0#1",
        "addw_low#0"
      ]
    },
    "673": {
      "op": "pushint 31 // 31",
      "defined_out": [
        "31",
        "addw_low#0",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "value#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "tmp%0#1",
        "addw_low#0",
        "31"
      ]
    },
    "675": {
      "op": "&",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "tmp%2#5",
        "value#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "value#0",
        "tmp%0#1",
        "tmp%2#5"
      ]
    },
    "676": {
      "op": "uncover 2",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "tmp%2#5",
        "value#0"
      ]
    },
    "678": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "value#0",
        "tmp%2#5"
      ]
    },
    "679": {
      "op": "shl",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "value#0"
      ]
    },
    "680": {
      "op": "intc_2 // 4294967295",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "value#0",
        "4294967295"
      ]
    },
    "681": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%0#1",
        "tmp%0#7"
      ]
    },
    "682": {
      "op": "|",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%5#5"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%5#5"
      ]
    },
    "683": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%5#5"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%5#5",
        "32"
      ]
    },
    "685": {
      "op": "shl",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0"
      ]
    },
    "686": {
      "op": "frame_dig -3",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "state.1#0 (copy)"
      ]
    },
    "688": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "state.1#0 (copy)",
        "18"
      ]
    },
    "690": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "tmp%0#1"
      ]
    },
    "691": {
      "op": "frame_dig -3",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "tmp%0#1",
        "state.1#0 (copy)"
      ]
    },
    "693": {
      "op": "^",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "tmp%1#1"
      ]
    },
    "694": {
      "op": "pushint 27 // 27",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "tmp%1#1",
        "27"
      ]
    },
    "696": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0"
      ]
    },
    "697": {
      "op": "intc_2 // 4294967295",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "4294967295"
      ]
    },
    "698": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0"
      ]
    },
    "699": {
      "op": "frame_dig -3",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "state.1#0 (copy)"
      ]
    },
    "701": {
      "op": "pushint 59 // 59",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "state.1#0 (copy)",
        "59"
      ]
    },
    "703": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "rot#0"
      ]
    },
    "704": {
      "op": "dup2",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "rot#0",
        "value#0 (copy)",
        "rot#0 (copy)"
      ]
    },
    "705": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "rot#0",
        "tmp%0#1"
      ]
    },
    "706": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "tmp%0#1",
        "rot#0"
      ]
    },
    "707": {
      "op": "~",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "tmp%0#1",
        "tmp%0#7"
      ]
    },
    "708": {
      "op": "intc_0 // 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "tmp%0#1",
        "tmp%0#7",
        "1"
      ]
    },
    "709": {
      "op": "addw",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "tmp%0#1",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "710": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "tmp%0#1",
        "addw_low#0"
      ]
    },
    "712": {
      "op": "pushint 31 // 31",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "tmp%0#1",
        "addw_low#0",
        "31"
      ]
    },
    "714": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "value#0",
        "tmp%0#1",
        "tmp%2#5"
      ]
    },
    "715": {
      "op": "uncover 2",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "tmp%0#1",
        "tmp%2#5",
        "value#0"
      ]
    },
    "717": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "tmp%0#1",
        "value#0",
        "tmp%2#5"
      ]
    },
    "718": {
      "op": "shl",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "tmp%0#1",
        "value#0"
      ]
    },
    "719": {
      "op": "intc_2 // 4294967295",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "tmp%0#1",
        "value#0",
        "4294967295"
      ]
    },
    "720": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "tmp%0#1",
        "tmp%0#7"
      ]
    },
    "721": {
      "op": "|",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%4#0",
        "tmp%5#5"
      ]
    },
    "722": {
      "op": "|",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%6#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%6#0"
      ]
    },
    "723": {
      "op": "itob",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0"
      ]
    },
    "724": {
      "op": "frame_dig -2",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "state.2#0 (copy)"
      ]
    },
    "726": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "state.2#0 (copy)",
        "18"
      ]
    },
    "728": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%0#1"
      ]
    },
    "729": {
      "op": "frame_dig -2",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%0#1",
        "state.2#0 (copy)"
      ]
    },
    "731": {
      "op": "^",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%1#1"
      ]
    },
    "732": {
      "op": "pushint 27 // 27",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%1#1",
        "27"
      ]
    },
    "734": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0"
      ]
    },
    "735": {
      "op": "intc_2 // 4294967295",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "4294967295"
      ]
    },
    "736": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0"
      ]
    },
    "737": {
      "op": "frame_dig -2",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "state.2#0 (copy)"
      ]
    },
    "739": {
      "op": "pushint 59 // 59",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "state.2#0 (copy)",
        "59"
      ]
    },
    "741": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "rot#0"
      ]
    },
    "742": {
      "op": "dup2",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "rot#0",
        "value#0 (copy)",
        "rot#0 (copy)"
      ]
    },
    "743": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "rot#0",
        "tmp%0#1"
      ]
    },
    "744": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "tmp%0#1",
        "rot#0"
      ]
    },
    "745": {
      "op": "~",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "tmp%0#1",
        "tmp%0#7"
      ]
    },
    "746": {
      "op": "intc_0 // 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "tmp%0#1",
        "tmp%0#7",
        "1"
      ]
    },
    "747": {
      "op": "addw",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "tmp%0#1",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "748": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "tmp%0#1",
        "addw_low#0"
      ]
    },
    "750": {
      "op": "pushint 31 // 31",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "tmp%0#1",
        "addw_low#0",
        "31"
      ]
    },
    "752": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "value#0",
        "tmp%0#1",
        "tmp%2#5"
      ]
    },
    "753": {
      "op": "uncover 2",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%0#1",
        "tmp%2#5",
        "value#0"
      ]
    },
    "755": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%0#1",
        "value#0",
        "tmp%2#5"
      ]
    },
    "756": {
      "op": "shl",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%0#1",
        "value#0"
      ]
    },
    "757": {
      "op": "intc_2 // 4294967295",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%0#1",
        "value#0",
        "4294967295"
      ]
    },
    "758": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%0#1",
        "tmp%0#7"
      ]
    },
    "759": {
      "op": "|",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%5#5"
      ]
    },
    "760": {
      "op": "pushint 32 // 32",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%5#5",
        "32"
      ]
    },
    "762": {
      "op": "shl",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "763": {
      "op": "frame_dig -1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "state.3#0 (copy)"
      ]
    },
    "765": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "state.3#0 (copy)",
        "18"
      ]
    },
    "767": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%0#1"
      ]
    },
    "768": {
      "op": "frame_dig -1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%0#1",
        "state.3#0 (copy)"
      ]
    },
    "770": {
      "op": "^",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%1#1"
      ]
    },
    "771": {
      "op": "pushint 27 // 27",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%1#1",
        "27"
      ]
    },
    "773": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0"
      ]
    },
    "774": {
      "op": "intc_2 // 4294967295",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "4294967295"
      ]
    },
    "775": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0"
      ]
    },
    "776": {
      "op": "frame_dig -1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "state.3#0 (copy)"
      ]
    },
    "778": {
      "op": "pushint 59 // 59",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "state.3#0 (copy)",
        "59"
      ]
    },
    "780": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "rot#0"
      ]
    },
    "781": {
      "op": "dup2",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "rot#0",
        "value#0 (copy)",
        "rot#0 (copy)"
      ]
    },
    "782": {
      "op": "shr",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "rot#0",
        "tmp%0#1"
      ]
    },
    "783": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "tmp%0#1",
        "rot#0"
      ]
    },
    "784": {
      "op": "~",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "tmp%0#1",
        "tmp%0#7"
      ]
    },
    "785": {
      "op": "intc_0 // 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "tmp%0#1",
        "tmp%0#7",
        "1"
      ]
    },
    "786": {
      "op": "addw",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "tmp%0#1",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "787": {
      "op": "bury 1",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "tmp%0#1",
        "addw_low#0"
      ]
    },
    "789": {
      "op": "pushint 31 // 31",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "tmp%0#1",
        "addw_low#0",
        "31"
      ]
    },
    "791": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "value#0",
        "tmp%0#1",
        "tmp%2#5"
      ]
    },
    "792": {
      "op": "uncover 2",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%0#1",
        "tmp%2#5",
        "value#0"
      ]
    },
    "794": {
      "op": "swap",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%0#1",
        "value#0",
        "tmp%2#5"
      ]
    },
    "795": {
      "op": "shl",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%0#1",
        "value#0"
      ]
    },
    "796": {
      "op": "intc_2 // 4294967295",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%0#1",
        "value#0",
        "4294967295"
      ]
    },
    "797": {
      "op": "&",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%0#1",
        "tmp%0#7"
      ]
    },
    "798": {
      "op": "|",
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%5#5"
      ]
    },
    "799": {
      "op": "|",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%11#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%11#0"
      ]
    },
    "800": {
      "op": "itob",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "tmp%7#0",
        "tmp%12#0"
      ]
    },
    "801": {
      "op": "concat",
      "defined_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "low_add#0",
        "low_add#1",
        "low_add#2",
        "low_add#3",
        "reinterpret_biguint%0#0"
      ]
    },
    "802": {
      "retsub": true,
      "op": "retsub"
    },
    "803": {
      "subroutine": "smart_contracts.lib_pcg128_exposer.contract.LibPcg128ExposerAlgopy.update",
      "params": {},
      "block": "update",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "806": {
      "op": "txn Sender"
    },
    "808": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "810": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "811": {
      "op": "assert",
      "stack_out": []
    },
    "812": {
      "retsub": true,
      "op": "retsub"
    }
  }
}