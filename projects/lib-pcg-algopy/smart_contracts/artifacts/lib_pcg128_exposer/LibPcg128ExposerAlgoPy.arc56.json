{
    "name": "LibPcg128ExposerAlgoPy",
    "structs": {},
    "methods": [
        {
            "name": "bounded_rand_uint128",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "seed"
                },
                {
                    "type": "uint128",
                    "name": "lower_bound"
                },
                {
                    "type": "uint128",
                    "name": "upper_bound"
                },
                {
                    "type": "uint16",
                    "name": "length"
                }
            ],
            "returns": {
                "type": "uint128[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": [
            "UpdateApplication"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        103
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                },
                {
                    "pc": [
                        131
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        121
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        363
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>"
                },
                {
                    "pc": [
                        375,
                        386
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint128"
                },
                {
                    "pc": [
                        395
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint16"
                },
                {
                    "pc": [
                        582,
                        756
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        572,
                        746
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAIAa3+1eTUhf2oWAD/////D8+Cnrvv796CFNGCnrvv796CFNOCnrvv796CFNWCnrvv796CFCYDAAEBEQEAAAAAAAAAAAAAAAAAAAAAMRtBABiABMNeCV02GgCOAQABADEZFDEYEERCAPIkgQQxGY4CAAoAAQAxGEQxADIJEkMxGBREIkOKBAWL/CMdRQEhBB5FAUkUIQVMkIv9Ix1FAR5FAUkUIQZMkIv+Ix1FAR5FAUkUIQdMkIv/Ix1FAR5FAYv8gRKRi/wbgRuRJRqL/IE7kUqRTBwiHkUBgR8aTwJMkCUaGYEgkIv9gRKRi/0bgRuRJRqL/YE7kUqRTBwiHkUBgR8aTwJMkCUaGRkWi/6BEpGL/huBG5ElGov+gTuRSpFMHCIeRQGBHxpPAkyQJRoZgSCQi/+BEpGL/xuBG5ElGov/gTuRSpFMHCIeRQGBHxpPAkyQJRoZGRZQiSRHAihHBDYaAUkVgSASRDYaAklOAkkVgRASRDYaA0lOAxWBEBJENhoESRWBAhJESwIkWyQjHUUBSSEEHkUBTwIeRQEjHUUBIQQeTgVISwOBCFtLASEFHkUBHkUBIx1FASEFHk4FSEsDgRBbSwEhBh5FAR5FASMdRQEhBh5OBUhPA4EYW0whBx5FAR5FASMdRQEhBx5OA0gXTIACAABMKKhBAGlLBiioQQBiJEsDRQpLBEULSwVFDEsGRQ1FDUsMSwIMQQA7SwtLC0sLSwuI/llOBEUNRQ1FDUUNSRWBEA5EgRCvq0sBSU8CUEwkWSIIFlcGAlwARQFLDCIIRQ1C/72ABBUffHVLAVCwIkNLBiipQQCbSwZJKaVESSqkREkpoUsJSU8CpEShRRBLD0muKaCAEP////////////////////+sTKpFDiRLA0UKSwRFC0sFRQxLBkUNRQ1LDEsCDEH/nksLSwtLC0sLiP28SU4FRRRFDUUNRQ1FDUsOp0H/4ksOSxCqSwigSRWBEA5EgRCvq0sBSU8CUEwkWSIIFlcGAlwARQFLDCIIRQ1C/6xLB0mAEIAAAAAAAAAAAAAAAAAAAACkRCpMoUUQQv9d",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 4,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}