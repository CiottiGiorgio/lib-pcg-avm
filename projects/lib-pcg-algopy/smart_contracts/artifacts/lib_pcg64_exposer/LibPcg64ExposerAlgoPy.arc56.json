{
    "name": "LibPcg64ExposerAlgoPy",
    "structs": {},
    "methods": [
        {
            "name": "bounded_rand_uint64",
            "args": [
                {
                    "type": "byte[16]",
                    "name": "seed"
                },
                {
                    "type": "uint64",
                    "name": "lower_bound"
                },
                {
                    "type": "uint64",
                    "name": "upper_bound"
                },
                {
                    "type": "uint16",
                    "name": "length"
                }
            ],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": [
            "UpdateApplication"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        62
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                },
                {
                    "pc": [
                        90
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        80
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        339,
                        465
                    ],
                    "errorMessage": "max array length exceeded"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxIDAgNjM2NDEzNjIyMzg0Njc5MzAwNSA0Mjk0OTY3Mjk1IDE0NDI2OTUwNDA4ODg5NjM0MDcgMTQ0MjY5NTA0MDg4ODk2MzQwOQogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDUKICAgIHB1c2hieXRlcyAweGJhNTY4MmNlIC8vIG1ldGhvZCAiYm91bmRlZF9yYW5kX3VpbnQ2NChieXRlWzE2XSx1aW50NjQsdWludDY0LHVpbnQxNil1aW50NjRbXSIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fYm91bmRlZF9yYW5kX3VpbnQ2NF9yb3V0ZUAzCiAgICBlcnIKCm1haW5fYm91bmRlZF9yYW5kX3VpbnQ2NF9yb3V0ZUAzOgogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICYmCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBiIGJvdW5kZWRfcmFuZF91aW50NjQKCm1haW5fYmFyZV9yb3V0aW5nQDU6CiAgICBpbnRjXzEgLy8gTm9PcAogICAgcHVzaGludCA0IC8vIFVwZGF0ZUFwcGxpY2F0aW9uCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBtYXRjaCBtYWluX19fYWxnb3B5X2RlZmF1bHRfY3JlYXRlQDYgbWFpbl91cGRhdGVANwogICAgZXJyCgptYWluX3VwZGF0ZUA3OgogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICB0eG4gU2VuZGVyCiAgICBnbG9iYWwgQ3JlYXRvckFkZHJlc3MKICAgID09CiAgICByZXR1cm4KCm1haW5fX19hbGdvcHlfZGVmYXVsdF9jcmVhdGVANjoKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICByZXR1cm4gLy8gb24gZXJyb3I6IGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwoKCi8vIGxpYl9wY2cucGNnNjQuX19wY2c2NF91bmJvdW5kZWRfcmFuZG9tKHN0YXRlLjA6IHVpbnQ2NCwgc3RhdGUuMTogdWludDY0KSAtPiB1aW50NjQsIHVpbnQ2NCwgdWludDY0OgpfX3BjZzY0X3VuYm91bmRlZF9yYW5kb206CiAgICBwcm90byAyIDMKICAgIGZyYW1lX2RpZyAtMgogICAgaW50Y18yIC8vIDYzNjQxMzYyMjM4NDY3OTMwMDUKICAgIG11bHcKICAgIGJ1cnkgMQogICAgaW50YyA0IC8vIDE0NDI2OTUwNDA4ODg5NjM0MDcKICAgIGFkZHcKICAgIGJ1cnkgMQogICAgZHVwCiAgICAhCiAgICBpbnRjIDUgLy8gMTQ0MjY5NTA0MDg4ODk2MzQwOQogICAgc3dhcAogICAgc2hsCiAgICBmcmFtZV9kaWcgLTEKICAgIGludGNfMiAvLyA2MzY0MTM2MjIzODQ2NzkzMDA1CiAgICBtdWx3CiAgICBidXJ5IDEKICAgIGFkZHcKICAgIGJ1cnkgMQogICAgZnJhbWVfZGlnIC0yCiAgICBwdXNoaW50IDE4IC8vIDE4CiAgICBzaHIKICAgIGZyYW1lX2RpZyAtMgogICAgXgogICAgcHVzaGludCAyNyAvLyAyNwogICAgc2hyCiAgICBpbnRjXzMgLy8gNDI5NDk2NzI5NQogICAgJgogICAgZnJhbWVfZGlnIC0yCiAgICBwdXNoaW50IDU5IC8vIDU5CiAgICBzaHIKICAgIGR1cDIKICAgIHNocgogICAgc3dhcAogICAgfgogICAgaW50Y18wIC8vIDEKICAgIGFkZHcKICAgIGJ1cnkgMQogICAgcHVzaGludCAzMSAvLyAzMQogICAgJgogICAgdW5jb3ZlciAyCiAgICBzd2FwCiAgICBzaGwKICAgIGludGNfMyAvLyA0Mjk0OTY3Mjk1CiAgICAmCiAgICB8CiAgICBwdXNoaW50IDMyIC8vIDMyCiAgICBzaGwKICAgIGZyYW1lX2RpZyAtMQogICAgcHVzaGludCAxOCAvLyAxOAogICAgc2hyCiAgICBmcmFtZV9kaWcgLTEKICAgIF4KICAgIHB1c2hpbnQgMjcgLy8gMjcKICAgIHNocgogICAgaW50Y18zIC8vIDQyOTQ5NjcyOTUKICAgICYKICAgIGZyYW1lX2RpZyAtMQogICAgcHVzaGludCA1OSAvLyA1OQogICAgc2hyCiAgICBkdXAyCiAgICBzaHIKICAgIHN3YXAKICAgIH4KICAgIGludGNfMCAvLyAxCiAgICBhZGR3CiAgICBidXJ5IDEKICAgIHB1c2hpbnQgMzEgLy8gMzEKICAgICYKICAgIHVuY292ZXIgMgogICAgc3dhcAogICAgc2hsCiAgICBpbnRjXzMgLy8gNDI5NDk2NzI5NQogICAgJgogICAgfAogICAgfAogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLmxpYl9wY2c2NF9leHBvc2VyLmNvbnRyYWN0LkxpYlBjZzY0RXhwb3NlckFsZ29QeS5ib3VuZGVkX3JhbmRfdWludDY0W3JvdXRpbmddKCkgLT4gdm9pZDoKYm91bmRlZF9yYW5kX3VpbnQ2NDoKICAgIHB1c2hieXRlcyAiIgogICAgZHVwbiA1CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAyCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAzCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyA0CiAgICBkaWcgMwogICAgbGVuCiAgICBwdXNoaW50IDE2IC8vIDE2CiAgICA9PQogICAgYXNzZXJ0CiAgICBkaWcgMwogICAgaW50Y18xIC8vIDAKICAgIGV4dHJhY3RfdWludDY0CiAgICBpbnRjXzEgLy8gMAogICAgaW50Y18yIC8vIDYzNjQxMzYyMjM4NDY3OTMwMDUKICAgIG11bHcKICAgIGJ1cnkgMQogICAgZHVwCiAgICBpbnRjIDQgLy8gMTQ0MjY5NTA0MDg4ODk2MzQwNwogICAgYWRkdwogICAgYnVyeSAxCiAgICB1bmNvdmVyIDIKICAgIGFkZHcKICAgIGJ1cnkgMQogICAgaW50Y18yIC8vIDYzNjQxMzYyMjM4NDY3OTMwMDUKICAgIG11bHcKICAgIGJ1cnkgMQogICAgaW50YyA0IC8vIDE0NDI2OTUwNDA4ODg5NjM0MDcKICAgIGFkZHcKICAgIGNvdmVyIDYKICAgIHBvcAogICAgdW5jb3ZlciA0CiAgICBwdXNoaW50IDggLy8gOAogICAgZXh0cmFjdF91aW50NjQKICAgIHN3YXAKICAgIGludGMgNSAvLyAxNDQyNjk1MDQwODg4OTYzNDA5CiAgICBhZGR3CiAgICBidXJ5IDEKICAgIGFkZHcKICAgIGJ1cnkgMQogICAgaW50Y18yIC8vIDYzNjQxMzYyMjM4NDY3OTMwMDUKICAgIG11bHcKICAgIGJ1cnkgMQogICAgaW50YyA1IC8vIDE0NDI2OTUwNDA4ODg5NjM0MDkKICAgIGFkZHcKICAgIGNvdmVyIDQKICAgIHBvcAogICAgdW5jb3ZlciAyCiAgICBidG9pCiAgICBkdXAKICAgIGNvdmVyIDMKICAgIHVuY292ZXIgMgogICAgYnRvaQogICAgY292ZXIgMgogICAgc3dhcAogICAgYnRvaQogICAgc3dhcAogICAgcHVzaGJ5dGVzIDB4MDAwMAogICAgc3dhcAogICAgYm56IGJvdW5kZWRfcmFuZF91aW50NjRfZWxzZV9ib2R5QDkKICAgIGRpZyAyCiAgICBibnogYm91bmRlZF9yYW5kX3VpbnQ2NF9lbHNlX2JvZHlAOQogICAgaW50Y18xIC8vIDAKICAgIGRpZyA1CiAgICBidXJ5IDkKICAgIGRpZyA2CiAgICBidXJ5IDEwCiAgICBidXJ5IDEwCgpib3VuZGVkX3JhbmRfdWludDY0X2Zvcl9oZWFkZXJANjoKICAgIGRpZyA5CiAgICBkaWcgMgogICAgPAogICAgYnogYm91bmRlZF9yYW5kX3VpbnQ2NF9hZnRlcl9pZl9lbHNlQDE5CiAgICBkaWcgOAogICAgZGlnIDgKICAgIGNhbGxzdWIgX19wY2c2NF91bmJvdW5kZWRfcmFuZG9tCiAgICBjb3ZlciAyCiAgICBidXJ5IDEwCiAgICBidXJ5IDEwCiAgICBpdG9iCiAgICBkaWcgMQogICAgZHVwCiAgICB1bmNvdmVyIDIKICAgIGNvbmNhdCAvLyBvbiBlcnJvcjogbWF4IGFycmF5IGxlbmd0aCBleGNlZWRlZAogICAgc3dhcAogICAgaW50Y18xIC8vIDAKICAgIGV4dHJhY3RfdWludDE2CiAgICBpbnRjXzAgLy8gMQogICAgKwogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHJlcGxhY2UyIDAKICAgIGJ1cnkgMQogICAgZGlnIDkKICAgIGludGNfMCAvLyAxCiAgICArCiAgICBidXJ5IDEwCiAgICBiIGJvdW5kZWRfcmFuZF91aW50NjRfZm9yX2hlYWRlckA2Cgpib3VuZGVkX3JhbmRfdWludDY0X2FmdGVyX2lmX2Vsc2VAMTk6CiAgICBwdXNoYnl0ZXMgMHgxNTFmN2M3NQogICAgZGlnIDEKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgpib3VuZGVkX3JhbmRfdWludDY0X2Vsc2VfYm9keUA5OgogICAgZGlnIDIKICAgIGJ6IGJvdW5kZWRfcmFuZF91aW50NjRfZWxzZV9ib2R5QDExCiAgICBkaWcgMgogICAgZHVwCiAgICBpbnRjXzAgLy8gMQogICAgPgogICAgYXNzZXJ0CiAgICBkdXAKICAgIGludGNfMCAvLyAxCiAgICAtCiAgICBkaWcgNQogICAgZHVwCiAgICB1bmNvdmVyIDIKICAgIDwKICAgIGFzc2VydAogICAgLQogICAgYnVyeSAxMgoKYm91bmRlZF9yYW5kX3VpbnQ2NF9hZnRlcl9pZl9lbHNlQDEyOgogICAgZGlnIDExCiAgICBkdXAKICAgIH4KICAgIGludGNfMCAvLyAxCiAgICBhZGR3CiAgICBidXJ5IDEKICAgIHN3YXAKICAgICUKICAgIGJ1cnkgNwogICAgaW50Y18xIC8vIDAKICAgIGRpZyA1CiAgICBidXJ5IDkKICAgIGRpZyA2CiAgICBidXJ5IDEwCiAgICBidXJ5IDEwCgpib3VuZGVkX3JhbmRfdWludDY0X2Zvcl9oZWFkZXJAMTM6CiAgICBkaWcgOQogICAgZGlnIDIKICAgIDwKICAgIGJ6IGJvdW5kZWRfcmFuZF91aW50NjRfYWZ0ZXJfaWZfZWxzZUAxOQoKYm91bmRlZF9yYW5kX3VpbnQ2NF93aGlsZV90b3BAMTU6CiAgICBkaWcgOAogICAgZGlnIDgKICAgIGNhbGxzdWIgX19wY2c2NF91bmJvdW5kZWRfcmFuZG9tCiAgICBkdXAKICAgIGNvdmVyIDMKICAgIGJ1cnkgMTQKICAgIGJ1cnkgMTAKICAgIGJ1cnkgMTAKICAgIGRpZyA3CiAgICA+PQogICAgYnogYm91bmRlZF9yYW5kX3VpbnQ2NF93aGlsZV90b3BAMTUKICAgIGRpZyAxMAogICAgZGlnIDEyCiAgICAlCiAgICBkaWcgNAogICAgKwogICAgaXRvYgogICAgZGlnIDEKICAgIGR1cAogICAgdW5jb3ZlciAyCiAgICBjb25jYXQgLy8gb24gZXJyb3I6IG1heCBhcnJheSBsZW5ndGggZXhjZWVkZWQKICAgIHN3YXAKICAgIGludGNfMSAvLyAwCiAgICBleHRyYWN0X3VpbnQxNgogICAgaW50Y18wIC8vIDEKICAgICsKICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICByZXBsYWNlMiAwCiAgICBidXJ5IDEKICAgIGRpZyA5CiAgICBpbnRjXzAgLy8gMQogICAgKwogICAgYnVyeSAxMAogICAgYiBib3VuZGVkX3JhbmRfdWludDY0X2Zvcl9oZWFkZXJAMTMKCmJvdW5kZWRfcmFuZF91aW50NjRfZWxzZV9ib2R5QDExOgogICAgZGlnIDMKICAgIGR1cAogICAgcHVzaGludCAxODQ0Njc0NDA3MzcwOTU1MTYxNSAvLyAxODQ0Njc0NDA3MzcwOTU1MTYxNQogICAgPAogICAgYXNzZXJ0CiAgICBpdG9iCiAgICBwdXNoYnl0ZXMgMHgwMTAwMDAwMDAwMDAwMDAwMDAKICAgIHN3YXAKICAgIGItCiAgICBidG9pCiAgICBidXJ5IDEyCiAgICBiIGJvdW5kZWRfcmFuZF91aW50NjRfYWZ0ZXJfaWZfZWxzZUAxMgo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAGAQCt/tXk1IX9qFj/////D8+Cnrvv796CFNGCnrvv796CFDEbQQAYgAS6VoLONhoAjgEAAQAxGRQxGBBEQgCDI4EEMRmOAgAKAAEAMRhEMQAyCRJDMRgUQ4oCA4v+JB1FASEEHkUBSRQhBUyQi/8kHUUBHkUBi/6BEpGL/huBG5ElGov+gTuRSpFMHCIeRQGBHxpPAkyQJRoZgSCQi/+BEpGL/xuBG5ElGov/gTuRSpFMHCIeRQGBHxpPAkyQJRoZGYmAAEcFNhoBNhoCNhoDNhoESwMVgRASREsDI1sjJB1FAUkhBB5FAU8CHkUBJB1FASEEHk4GSE8EgQhbTCEFHkUBHkUBJB1FASEFHk4ESE8CF0lOA08CF04CTBdMgAIAAExAAE5LAkAASSNLBUUJSwZFCkUKSwlLAgxBACpLCEsIiP8UTgJFCkUKFksBSU8CUEwjWSIIFlcGAlwARQFLCSIIRQpC/86ABBUffHVLAVCwIkNLAkEAbUsCSSINREkiCUsFSU8CDEQJRQxLC0kcIh5FAUwYRQcjSwVFCUsGRQpFCksJSwIMQf+9SwhLCIj+p0lOA0UORQpFCksHD0H/6ksKSwwYSwQIFksBSU8CUEwjWSIIFlcGAlwARQFLCSIIRQpC/71LA0mB////////////AQxEFoAJAQAAAAAAAAAATKEXRQxC/4I=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}