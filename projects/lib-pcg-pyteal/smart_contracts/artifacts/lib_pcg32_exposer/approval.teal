#pragma version 8
intcblock 0 1 1442695040888963407 6364136223846793005 4294967295
bytecblock 0x 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xb915f691 // "bounded_rand_uint32(uint64,uint32,uint32,uint16)uint32[]"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x72463f1f // "bounded_rand_uint16(uint64,uint16,uint16,uint16)uint16[]"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x7d00c86c // "bounded_rand_uint8(uint64,uint8,uint8,uint16)uint8[]"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub boundedranduint8caster_10
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub boundedranduint16caster_9
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub boundedranduint32caster_8
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l14
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l13
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l12
err
main_l12:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_4
intc_1 // 1
return
main_l13:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_3
intc_1 // 1
return
main_l14:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// pcg32_init
pcg32init_0:
proto 2 0
frame_dig -2
intc_0 // 0
stores
frame_dig -2
intc_2 // 1442695040888963407
intc_3 // 6364136223846793005
frame_dig -2
loads
mulw
bury 1
addw
bury 1
stores
frame_dig -2
frame_dig -2
loads
frame_dig -1
addw
bury 1
stores
frame_dig -2
intc_2 // 1442695040888963407
intc_3 // 6364136223846793005
frame_dig -2
loads
mulw
bury 1
addw
bury 1
stores
retsub

// __pcg32_random
pcg32random_1:
proto 1 1
frame_dig -1
loads
store 8
frame_dig -1
intc_2 // 1442695040888963407
intc_3 // 6364136223846793005
frame_dig -1
loads
mulw
bury 1
addw
bury 1
stores
load 8
pushint 18 // 18
shr
load 8
^
pushint 27 // 27
shr
intc 4 // 4294967295
&
store 9
load 8
pushint 59 // 59
shr
store 10
load 9
load 10
shr
load 9
load 10
~
intc_1 // 1
addw
bury 1
pushint 31 // 31
&
shl
intc 4 // 4294967295
&
|
retsub

// pcg32_random
pcg32random_2:
proto 5 1
intc_0 // 0
frame_dig -1
frame_bury 0
frame_dig 0
pushint 65536 // 65536
<
assert
frame_dig 0
itob
extract 6 0
store 4
frame_dig -4
pushint 8 // 8
==
frame_dig -4
pushint 16 // 16
==
||
frame_dig -4
pushint 32 // 32
==
||
assert
frame_dig -4
pushint 3 // 3
shr
store 1
pushint 8 // 8
load 1
-
store 5
frame_dig -3
intc_0 // 0
==
frame_dig -2
intc_0 // 0
==
&&
bnz pcg32random_2_l10
frame_dig -2
intc_0 // 0
!=
bnz pcg32random_2_l9
frame_dig -3
intc_1 // 1
frame_dig -4
shl
intc_1 // 1
-
<
assert
intc_1 // 1
frame_dig -4
shl
frame_dig -3
-
store 2
pcg32random_2_l3:
load 2
~
intc_1 // 1
+
intc 4 // 4294967295
&
load 2
%
store 3
intc_0 // 0
store 6
pcg32random_2_l4:
load 6
frame_dig -1
<
bz pcg32random_2_l13
frame_dig -5
callsub pcg32random_1
store 7
pcg32random_2_l6:
load 7
load 3
<
bnz pcg32random_2_l8
load 4
load 7
load 2
%
frame_dig -3
+
itob
load 5
load 1
extract3
concat
store 4
load 6
intc_1 // 1
+
store 6
b pcg32random_2_l4
pcg32random_2_l8:
frame_dig -5
callsub pcg32random_1
store 7
b pcg32random_2_l6
pcg32random_2_l9:
frame_dig -2
intc_1 // 1
>
assert
frame_dig -2
intc_1 // 1
frame_dig -4
shl
<
assert
frame_dig -3
frame_dig -2
intc_1 // 1
-
<
assert
frame_dig -2
frame_dig -3
-
store 2
b pcg32random_2_l3
pcg32random_2_l10:
intc_0 // 0
store 6
pcg32random_2_l11:
load 6
frame_dig -1
<
bz pcg32random_2_l13
load 4
frame_dig -5
callsub pcg32random_1
itob
load 5
load 1
extract3
concat
store 4
load 6
intc_1 // 1
+
store 6
b pcg32random_2_l11
pcg32random_2_l13:
load 4
frame_bury 0
retsub

// update
update_3:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_UPDATABLE // TMPL_UPDATABLE
// Check app is updatable
assert
retsub

// delete
delete_4:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
retsub

// bounded_rand_uint32
boundedranduint32_5:
proto 4 1
bytec_0 // ""
intc_0 // 0
frame_dig -4
callsub pcg32init_0
intc_0 // 0
pushint 32 // 32
frame_dig -3
frame_dig -2
frame_dig -1
callsub pcg32random_2
frame_bury 0
retsub

// bounded_rand_uint16
boundedranduint16_6:
proto 4 1
bytec_0 // ""
pushint 11 // 11
frame_dig -4
callsub pcg32init_0
pushint 11 // 11
pushint 16 // 16
frame_dig -3
frame_dig -2
frame_dig -1
callsub pcg32random_2
frame_bury 0
retsub

// bounded_rand_uint8
boundedranduint8_7:
proto 4 1
bytec_0 // ""
pushint 12 // 12
frame_dig -4
callsub pcg32init_0
pushint 12 // 12
pushint 8 // 8
frame_dig -3
frame_dig -2
frame_dig -1
callsub pcg32random_2
frame_bury 0
retsub

// bounded_rand_uint32_caster
boundedranduint32caster_8:
proto 0 0
bytec_0 // ""
intc_0 // 0
dupn 3
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
intc_0 // 0
extract_uint32
frame_bury 2
txna ApplicationArgs 3
intc_0 // 0
extract_uint32
frame_bury 3
txna ApplicationArgs 4
intc_0 // 0
extract_uint16
frame_bury 4
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub boundedranduint32_5
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// bounded_rand_uint16_caster
boundedranduint16caster_9:
proto 0 0
bytec_0 // ""
intc_0 // 0
dupn 3
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
intc_0 // 0
extract_uint16
frame_bury 2
txna ApplicationArgs 3
intc_0 // 0
extract_uint16
frame_bury 3
txna ApplicationArgs 4
intc_0 // 0
extract_uint16
frame_bury 4
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub boundedranduint16_6
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// bounded_rand_uint8_caster
boundedranduint8caster_10:
proto 0 0
bytec_0 // ""
intc_0 // 0
dupn 3
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 2
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 3
txna ApplicationArgs 4
intc_0 // 0
extract_uint16
frame_bury 4
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub boundedranduint8_7
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub