{
  "hints": {
    "bounded_rand_uint128(byte[32],uint128,uint128,uint16)uint128[]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "updateApplication()void": {
      "call_config": {
        "update_application": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "CREATE",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "CALL",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {},
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "LibPcg128ExposerTs",
    "desc": "",
    "methods": [
      {
        "name": "bounded_rand_uint128",
        "args": [
          {
            "name": "seed",
            "type": "byte[32]"
          },
          {
            "name": "lower_bound",
            "type": "uint128"
          },
          {
            "name": "upper_bound",
            "type": "uint128"
          },
          {
            "name": "length",
            "type": "uint16"
          }
        ],
        "returns": {
          "type": "uint128[]"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "updateApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}