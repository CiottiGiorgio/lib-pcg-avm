{
    "name": "LibPcg128ExposerAlgoTs",
    "structs": {},
    "methods": [
        {
            "name": "bounded_rand_uint128",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "seed"
                },
                {
                    "type": "uint128",
                    "name": "lower_bound"
                },
                {
                    "type": "uint128",
                    "name": "upper_bound"
                },
                {
                    "type": "uint16",
                    "name": "length"
                }
            ],
            "returns": {
                "type": "uint128[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": [
            "UpdateApplication"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        119
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        188
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        122,
                        193
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        131
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>"
                },
                {
                    "pc": [
                        139,
                        147
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint128"
                },
                {
                    "pc": [
                        156
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint16"
                },
                {
                    "pc": [
                        583,
                        742
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAJEK3+1eTUhf2oWAABz4Keu+/v3oIU1YKeu+/v3oIU04Keu+/v3oIU0YKeu+/v3oIU/////w8mBAABAREBAAAAAAAAAAAAAAAAAAAAABD/////////////////////MRtBAEaABMNeCV02GgCOAQACJEMxGRREMRhENhoBSRWBIBJENhoCSRUiEkQ2GgNJFSISRDYaBEkVgQISRIgA7IAEFR98dUxQsCVDgQQkMRmOAgAJAANC/7kxGBREJUMxGESIAmglQ4oBAYv/gRKRi/8bgRuRIQgai/+BO5FKkUwcJR5FAYEfGk8CTJAhCBoZiYoEBShJi/wjHUUBIQQeSU8CSEAAgYGihbz23t+9hSiL/SMdRQEeSU4CjAFIQABigaaFvPbe372FKIv+Ix1FAR5JTgKMAEhAAEOBqoW89t7fvYUoi/8jHUUBHkUBi/yI/3WBIJCL/Yj/bRkWi/6I/2aBIJCL/4j/XhkWUIsCiwGLAE8ETwRPB08HTweJIQVC/8IhBkL/oyEHQv+EigQBJEcCKEcIi/wVgSASRIv8JFskIx1FAUkhBB5FAU8CHkUBIx1FASEEHk4CSIv8gQhbSwEhBx5FAR5FASMdRQEhBx5OAkiL/CJbSwEhBh5FAR5FASMdRQEhBh5OAkiL/IEYW0whBR5FAR5FASMdRQEhBR5FAYv/F4ACAACL/SioQQBgi/4oqEEAWSSMA4sPjAuLDowKiw2MCYsMjAiLA4sQDEEAOYsIiwmLCosLiP60ixFXAgBLARUiDkQir08Cq1BJFSIKFlcGAkxQjBGLAyUIjAOMC4wKjAmMCEL/v4sRjACJi/4oqUEAqIv+KaVEi/4qpESL/imhi/2lRIv+i/2hjACLAEmuKaArrEyqjAIkjASLD4wLiw6MCosNjAmLDIwIiwSLEAxB/7SLCIsJiwqLC4j+L0lOBYwBTgSMB4wGjAWLAqdBADmLEVcCAIsBiwCqi/2gSRUiDkQir6tQSRUiChZXBgJMUIwRiwQlCIwEjAuLB4wKiwaMCYsFjAhC/6GMC4sHjAqLBowJiwWMCEL/mIv9K6REKov9oYwAQv9jMQAyCRJEiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 11,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}