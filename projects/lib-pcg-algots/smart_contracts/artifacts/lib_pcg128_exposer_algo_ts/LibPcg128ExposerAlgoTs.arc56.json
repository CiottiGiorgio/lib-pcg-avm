{
    "name": "LibPcg128ExposerAlgoTs",
    "structs": {},
    "methods": [
        {
            "name": "bounded_rand_uint128",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "seed"
                },
                {
                    "type": "uint128",
                    "name": "lower_bound"
                },
                {
                    "type": "uint128",
                    "name": "upper_bound"
                },
                {
                    "type": "uint16",
                    "name": "length"
                }
            ],
            "returns": {
                "type": "uint128[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": [
            "UpdateApplication"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        119
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        166
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        122,
                        171
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        554,
                        713
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAJrf7V5NSF/ahYABABz4Keu+/v3oIU1YKeu+/v3oIU04Keu+/v3oIU0YKeu+/v3oIU/////w8mBAABAREBAAAAAAAAAAAAAAAAAAAAABD/////////////////////MRtBADCABMNeCV02GgCOAQACI0MxGRREMRhENhoBNhoCNhoDNhoEiADsgAQVH3x1TFCwJUOBBCMxGY4CAAkAA0L/zzEYFEQlQzEYRIgCYSVDigEBi/+BEpGL/xuBG5EhCBqL/4E7kUqRTBwlHkUBgR8aTwJMkCEIGhmJigQFKEmL/CIdRQEhBB5JTwJIQACBgaKFvPbe372FKIv9Ih1FAR5JTgKMAUhAAGKBpoW89t7fvYUoi/4iHUUBHklOAowASEAAQ4Gqhbz23t+9hSiL/yIdRQEeRQGL/Ij/dYEgkIv9iP9tGRaL/oj/ZoEgkIv/iP9eGRZQiwKLAYsATwRPBE8HTwdPB4khBUL/wiEGQv+jIQdC/4SKBAEjRwIoRwiL/CNbIyIdRQFJIQQeRQFPAh5FASIdRQEhBB5OAkiL/IEIW0sBIQceRQEeRQEiHUUBIQceTgJIi/wkW0sBIQYeRQEeRQEiHUUBIQYeTgJIi/yBGFtMIQUeRQEeRQEiHUUBIQUeRQGL/xeAAgAAi/0oqEEAYIv+KKhBAFkjjAOLD4wLiw6MCosNjAmLDIwIiwOLEAxBADmLCIsJiwqLC4j+u4sRVwIASwEVJA5EJK9PAqtQSRUkChZXBgJMUIwRiwMlCIwDjAuMCowJjAhC/7+LEYwAiYv+KKlBAKiL/imlRIv+KqREi/4poYv9pUSL/ov9oYwAiwBJrimgK6xMqowCI4wEiw+MC4sOjAqLDYwJiwyMCIsEixAMQf+0iwiLCYsKiwuI/jZJTgWMAU4EjAeMBowFiwKnQQA5ixFXAgCLAYsAqov9oEkVJA5EJK+rUEkVJAoWVwYCTFCMEYsEJQiMBIwLiweMCosGjAmLBYwIQv+hjAuLB4wKiwaMCYsFjAhC/5iL/SukRCqL/aGMAEL/YzEAMgkSRIk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}